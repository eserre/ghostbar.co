---
layout: post
title: Express Sessions with connect-redis + Socket.IO in CoffeeScript
tags:
- CoffeeScript
- connect-redis
- English
- Express
- javascript
- Node.js
- Planet Debian
- Redis
- Session
- Socket.IO
- Software
- Tecnología
status: publish
type: post
published: true
meta:
  _edit_last: '1'
  dsq_thread_id: '572894602'
---
If you are working with <a href='http://socket.io/'>Socket.IO</a> and <a href='http://expressjs.com/'>Express Framework</a> while developing your applications you must know they work together so Socket.IO will listen on the same port that your HTTP/S server and will serve the requests by that way, but Socket.IO doesn't works on the same paradigm where you pass a middleware to the route and you could get authentication on this manner. Instead, you must configure Socket.IO with a global authorization method or a handshake authorization manner.

Since in my applications I serve cookies already where I save session info and this is already stored in Redis with help of the module connect-redis then I should be able to get this info onto Socket.IO authorization method and with this allow only to authorized users to get info from my websockets.

I found <a href='http://www.danielbaulig.de/socket-ioexpress/'>how to do it with the default session-store in-memory from Express</a>, and adapted that so it could work with Redis.

Here's the snippet:

<script src="https://gist.github.com/1805743.js"> </script><noscript>You don't have JavaScript enabled, check it out <a href="https://gist.github.com/1805743">at gist.github.com »</a></noscript>

Hope anyone can found it useful!
