<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ghostbar</title>
    <description>Random thoughts on technology</description>
    <link></link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    
      
        <item>
          
          <title>Node's EventEmitter without object modules</title>
          <link>/2016/01/30/node-eventemitter-easy</link>
          <guid isPermaLink="true">/2016/01/30/node-eventemitter-easy</guid>
          
          <pubDate>Sat, 30 Jan 2016 19:14:40 -0500</pubDate>
          <description>&lt;p&gt;I was looking for a way to use Node&#39;s EventEmitters without having to use classes/prototypes on my modules and turns out thanks to the caching of modules, this way of creating event emitters is possible.&lt;/p&gt;

&lt;p&gt;Basically I create a module (let&#39;s call it &lt;code&gt;a&lt;/code&gt;) where there&#39;s an &lt;code&gt;init&lt;/code&gt; function that gets called when the module is required and exports an event emitter that&#39;s used along the &lt;code&gt;a&lt;/code&gt; module. Thanks to caching, the &lt;code&gt;init&lt;/code&gt; function get&#39;s called just once even if it&#39;s required in several other modules and/or the &lt;code&gt;index.js&lt;/code&gt; and the EventEmitter works just like it should. This is the prototype I made for this test and an asciinema with the output:&lt;/p&gt;

&lt;script type=&quot;text/javascript&quot; src=&quot;https://asciinema.org/a/35204.js&quot; id=&quot;asciicast-35204&quot; async&gt;&lt;/script&gt;




&lt;script src=&quot;https://gist.github.com/ghostbar/bcc29ec190eeb616f571.js&quot;&gt;&lt;/script&gt;


          </description>
        </item>
      
    
      
        <item>
          
          <title>WWHW: a timeout id is saved on an array</title>
          <link>/2016/01/04/wwhw-js-timeouts</link>
          <guid isPermaLink="true">/2016/01/04/wwhw-js-timeouts</guid>
          
          <pubDate>Mon, 04 Jan 2016 12:50:54 -0500</pubDate>
          <description>&lt;p&gt;I always do silly tests to check what happens when I do something, so just wanted to share it with whoever does silly tests as well and wants to save some time.&lt;/p&gt;

&lt;p&gt;I wanted to know what was exactly the timeout id from &lt;code&gt;setTimeout&lt;/code&gt; and what would happen if I saved it on an array. (Wondered basically if it would go &lt;code&gt;null&lt;/code&gt; some time, and it doesn&#39;t).&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ghostbar/81cb47ac4a03a6140a40.js&quot;&gt;&lt;/script&gt;




&lt;script type=&quot;text/javascript&quot; src=&quot;https://asciinema.org/a/32948.js&quot; id=&quot;asciicast-32948&quot; async&gt;&lt;/script&gt;


          </description>
        </item>
      
    
      
        <item>
          
          <title>Loggly as a CoreOS service</title>
          <link>/2015/03/26/loggly-as-a-coreos-service</link>
          <guid isPermaLink="true">/2015/03/26/loggly-as-a-coreos-service</guid>
          
          <pubDate>Thu, 26 Mar 2015 11:02:05 -0500</pubDate>
          <description>&lt;p&gt;I spent a lot of today figuring out the best way to send the stream of logs from CoreOS to loggly, because it requires structured data and then sending it from a service on systemd.&lt;/p&gt;

&lt;p&gt;So this was my solution for whoever it can work for.&lt;/p&gt;

&lt;script src=&quot;https://gist.github.com/ghostbar/f7f2e82884631b083017.js&quot;&gt;&lt;/script&gt;


          </description>
        </item>
      
    
      
        <item>
          
          <title>Easy proxies with nodejs</title>
          <link>/2015/02/27/easy-proxies-with-nodejs</link>
          <guid isPermaLink="true">/2015/02/27/easy-proxies-with-nodejs</guid>
          
          <pubDate>Fri, 27 Feb 2015 10:01:20 -0500</pubDate>
          <description>&lt;p&gt;Easy ways to get proxies with nodejs/iojs, the way to launch it should be&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;URL=&#39;http://google.com&#39; PORT=8080 node script.js
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Using http-proxy&lt;/h2&gt;

&lt;p&gt;Requires &lt;code&gt;npm install http-proxy&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var http = require(&#39;http&#39;);
var httpProxy = require(&#39;http-proxy&#39;);

var proxy = httpProxy.createProxyServer({target: process.env.URL});

http.createServer(function (req, res) {
  proxy.web(req, res);
}).listen(process.env.PORT || 3000);
&lt;/code&gt;&lt;/pre&gt;

&lt;h2&gt;Using hapijs&lt;/h2&gt;

&lt;p&gt;Requires &lt;code&gt;npm install hapi&lt;/code&gt;.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;var hapi = require(&#39;hapi&#39;);
var server = new hapi.Server();
server.connection({ port: process.env.PORT || 3000 })

var routes = [{
  method: &#39;*&#39;,
  path: &#39;/{p*}&#39;,
  config: {
  },
  handler: {
    proxy: {
      host: process.env.URL,
      passThrough: true,
      redirects: 9999
    }
  }
}];

server.route(routes);

server.start(function () {
  console.log(&#39;Server running at:&#39;, server.info.uri);
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;code&gt;hapijs&lt;/code&gt; it&#39;s longer and having just one path to proxy seems like killing an ant with an elephant shotgun, yet I wanted to publish the &lt;code&gt;hapijs&lt;/code&gt; way because it&#39;s easier to have several proxies in the same server in different paths. If you combine it with &lt;code&gt;catbox&lt;/code&gt; you could do a very simple &lt;code&gt;proxy-cache&lt;/code&gt; for several URLs, each URL in a different route without spawning several servers.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Recordando a Aaron Swartz</title>
          <link>/2015/01/11/recordando-a-aaron-swartz</link>
          <guid isPermaLink="true">/2015/01/11/recordando-a-aaron-swartz</guid>
          
          <pubDate>Sun, 11 Jan 2015 12:53:38 -0500</pubDate>
          <description>&lt;p&gt;Un libro que me encantó es «Homeland» de Cory Doctorow, trata sobre un grupo de hackers que se ven envueltos en situaciones que los deja expuestos a uno de los gobiernos y empresas más poderosas que existen y deben hacer algo aún así los haga correr peligros. Una historia de ficción sobre gente como Aaron Swartz.&lt;/p&gt;

&lt;p&gt;Pero lo mejor del libro, es que precisamente cierra con dos cartas, una por Jacob Appelbaum, uno de los primeros mimbros de Wikileaks y desarrollador del proyecto Tor; y otra por Aaron Swartz. La carta de Aaron la traduje y publico a continuación, espero les sirva de inspiración para que sigan en sus luchas aún cuando a veces parezca que quién da la batalla del otro lado es muy grande e invencible:&lt;/p&gt;

&lt;blockquote&gt;&lt;p&gt;Hola, soy Aaron. Se me ha dado este pequeño espacio aquí al final del libro porque soy un humano de carne y hueso, y cómo tal, puedo decirte algo que no creerías si viniese de la boca de cualquiera de esos carácteres ficticios:&lt;/p&gt;

&lt;p&gt;Esto es real.&lt;/p&gt;

&lt;p&gt;Claro, no hay alguien llamado Marcus o Ange realmente, al menos no que yo conozca, pero sí sé de gente real justo como ellos. Si quieres, puedes ir a San Francisco y conocerlos. Y mientras estás allí, puedes jugar D&amp;amp;D con John Gilmore o construir un cohete en Noisebridge o trabajar con algunos hippies en un proyecto de arte para Burning Man.&lt;/p&gt;

&lt;p&gt;Y si algo de las cosas más relacionadas con conspiraciones en el libro te parecen demasiado alocadas para ser verdad, bueno, simplemente &lt;em&gt;googlea&lt;/em&gt; Blackwater, Xe o BlueCoat. (Yo mismo tengo una solicitud FOIA pendiente para saber más de &quot;software para manejo de persona&quot;, pero los federales dicen que les va a tomar tres &lt;em&gt;años&lt;/em&gt; más redactar todos los documentos relevantes.)&lt;/p&gt;

&lt;p&gt;Ahora, yo espero que te hayas divertido quedándote despierto toda la noche leyendo acerca de estas cosas, pero la parte que viene es importante así que presta atención: lo que está pasando ahora no es algún reality show de televisión donde simplemente puedes sentarte en casa y ver.&lt;/p&gt;

&lt;p&gt;Esta es tu vida, este es tú país -- y se quieres mantenerlo seguro, debes involucrarte.&lt;/p&gt;

&lt;p&gt;Sé que es fácil sentirse sin poder, como si no hubiese algo que puedas hacer para que baje la marcha o detener &quot;el sistema.&quot; Como si todos los hilos son movidos por fuerzas oscuras y poderosas lejanas a tu control. Yo me siento de esa forma también, a veces. Pero simplemente no es verdad.&lt;/p&gt;

&lt;p&gt;Hace menos de un año, un amigo me llamó para decirme sobre un proyecto de ley oscuro del cuál había escuchado llamado &lt;em&gt;Acta para Combatir la Vulneración En Línea y La Falsificación&lt;/em&gt; o &lt;em&gt;COICA&lt;/em&gt;  (En Inglés es: &lt;em&gt;Combatting Online Infringement and Counterfeitting Act&lt;/em&gt;, de allí la abreviación &lt;em&gt;COICA&lt;/em&gt;). Mientras leía el proyecto empecé a preocuparme más y más: bajo estas provisiones, el gobierno podría censurar sitios web que no le gusten sin algo como un juicio. Sería la primera vez que el gobierno de los EEUU se le darían poderes para censurar el acceso a la red.&lt;/p&gt;

&lt;p&gt;El proyecto había sido introducido hace un día o dos, pero ya tenía un par de docenas de senadores apoyándola. Y, a pesar de nunca haber un debate ya estaba siendo programada para ser votada en sólo un par de días. Nadie había reportado al respecto y ése era justamente el punto: ellos querían apurar esta cosa para que pasara antes que alguien se diese cuenta.&lt;/p&gt;

&lt;p&gt;Afortunadamente, mi amigo se dió cuenta. Nos quedamos despiertos todo el fin de semana y lanzamos un sitio web explicando qué decía el proyecto de ley, con una petición que podías firmar en rechazo al proyecto que te daría números de teléfonos para llamar a tus representantes en el senado. Le dijimos al respecto a algunos amigos y ellos le dijeron a algunos de sus amigos y en cuestión de un par de días teníamos más de 200 mil personas en nuestra petición. Fue increíble.&lt;/p&gt;

&lt;p&gt;Bueno, la gente promoviendo esta ley no paró. Ellos gastaron literalmente decenas de millones de dólares haciendo lobby para éste proyecto de ley. La cabeza de cada compañía de medios grandes voló a Washington, D.C. y allí se reunieron con el jefe de personal del presidente y amablemente le recordaron de los millones de dólares que le habían donado a la campaña del presidente y le explicaron cómo lo que ellos querían -- la única cosa que querían -- era que esta ley se aprobara.&lt;/p&gt;

&lt;p&gt;Pero la presión pública siguió creciendo. Para intentar sacar a la gente del camino ellos intentaron cambiando el nombre de la ley -- llamándola PIPA y SOPA, incluso llamándola E-PARASITES Act -- pero no importó cómo la llamaron, más y más personas se siguieron diciéndole a sus amigos  sobre la ley y consiguiendo más y más personas que se opusieran. Pronto, las firmas en nuestra petición iba en millones.&lt;/p&gt;

&lt;p&gt;Logramos detenerlos por más de un año con diferentes tácticas, pero se dieron cuenta que si esperaban más quizás nunca lograrían tener un chance de pasar esta ley. Así que programaron un voto apenas volviesen de la pausa de invierno.&lt;/p&gt;

&lt;p&gt;Pero mientras los miembros del congreso estaban fuera en la pausa de invierno, manteniendo reuniones públicas y en las salas de sus pueblos en casa, la gente empezó a visitarlos. En todo el país, miembros del congreso empezaron a ser cuestionados por sus electores acerca de su apoyo a esa sucia ley de censura del internet. Y los miembros del congreso empezaron a asustarse -- algunos llegando tan lejos como responderles &lt;em&gt;atacandome&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Pero esto ya no se trataba de mi -- nunca se trató de mi. Desde el principio fue sobre ciudadanos tomando las cosas en sus propias manos: haciendo vídeos en YouTube y escribiendo canciones oponiéndose a la ley, haciendo gráficos mostrando cuánto dinero los promotores de la ley habían recibido de las industrias promoviéndola, y organizando boycotts poniéndo presión en las compañías que habían promovido la ley.&lt;/p&gt;

&lt;p&gt;Y funcionó -- tomó la ley desde un punto político sin problema alguno que se suponía debía pasar unánimamente a una posición más parecida a tener un balón tóxico que nadie quería tocar. ¡Incluso los promotores de la ley empezaron a sacar declaraciones oponiéndose a la ley! Oh sí, esos dueños de medios estaban molestos...&lt;/p&gt;

&lt;p&gt;Así no es como se supone que el sistema deba funcionar. ¡Un montón de chicos no detienen unas de las fuerzas más poderosas en Washington simplemente escribiendo en sus portátiles!&lt;/p&gt;

&lt;p&gt;Pero pasó. Y tú puedes hacer que pase de nuevo.&lt;/p&gt;

&lt;p&gt;El sistema está cambiando. Gracias a la Internet, todos los días personas pueden saber acerca de cosas y organizarse incluso si el sistema está determinado a ignorarlo. Ahora, quizás no ganes todo el tiempo -- esto es la vida real, después de todo -- pero finalmente tenemos una oportunidad.&lt;/p&gt;

&lt;p&gt;Pero sólo funciona si tú tomas parte en ello. Y ahora que has leído este libro y aprendido cómo hacerlo, estas perfectamente informado sobre cómo hacerlo de nuevo. Es correcto: ahora depende de ti cambiar el sistema.&lt;/p&gt;

&lt;p&gt;Aaron Swartz.&lt;/p&gt;&lt;/blockquote&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Published hapi-hiredis on npm</title>
          <link>/2015/01/08/hapi-hiredis-plugin</link>
          <guid isPermaLink="true">/2015/01/08/hapi-hiredis-plugin</guid>
          
          <pubDate>Thu, 08 Jan 2015 16:55:36 -0500</pubDate>
          <description>&lt;p&gt;I just published to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; the module &lt;a href=&quot;https://www.npmjs.com/package/hapi-hiredis&quot;&gt;&lt;code&gt;hapi-hiredis&lt;/code&gt;&lt;/a&gt;. This plugin for &lt;a href=&quot;http://hapijs.com&quot;&gt;&lt;code&gt;hapi&lt;/code&gt;&lt;/a&gt; is fully compatible with 8.0 (and actually expects it).&lt;/p&gt;

&lt;p&gt;The difference between this plugin and &lt;a href=&quot;https://www.npmjs.com/package/hapi-redis&quot;&gt;&lt;code&gt;hapi-redis&lt;/code&gt;&lt;/a&gt; is that this module uses the &lt;code&gt;hiredis&lt;/code&gt; parser based on &lt;code&gt;C++&lt;/code&gt; bindings, &lt;code&gt;redis&lt;/code&gt; uses a slower &lt;code&gt;javascript&lt;/code&gt; parser. Besides that main difference this plugin supports &lt;code&gt;URL&lt;/code&gt;s for giving the connection, instead &lt;code&gt;hapi-redis&lt;/code&gt; only supports giving the connection parameters via separate &lt;code&gt;host&lt;/code&gt;, &lt;code&gt;port&lt;/code&gt; and &lt;code&gt;password&lt;/code&gt; fields.&lt;/p&gt;

&lt;p&gt;Using it is very simple, after registering the usual way as any other plugin then you can get it from the context on handlers and extensions as &lt;code&gt;this.redis&lt;/code&gt; or get it from &lt;code&gt;server.plugins[&#39;hapi-hiredis].client&lt;/code&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Published hapi-mongodb2 on npm</title>
          <link>/2015/01/02/hapi-mongodb2-plugin</link>
          <guid isPermaLink="true">/2015/01/02/hapi-mongodb2-plugin</guid>
          
          <pubDate>Fri, 02 Jan 2015 19:30:29 -0500</pubDate>
          <description>&lt;p&gt;I just published to &lt;a href=&quot;https://www.npmjs.com/&quot;&gt;&lt;code&gt;npm&lt;/code&gt;&lt;/a&gt; the module &lt;a href=&quot;https://www.npmjs.com/package/hapi-mongodb2&quot;&gt;&lt;code&gt;hapi-mongodb2&lt;/code&gt;&lt;/a&gt;. This plugin for &lt;a href=&quot;http://hapijs.com&quot;&gt;&lt;code&gt;hapi&lt;/code&gt;&lt;/a&gt; is fully compatible with 8.0 (and actually expects it) and uses the MongoDB node.js driver 2.0 instead of the old 1.4.&lt;/p&gt;

&lt;p&gt;Using it is very simple, after registering the usual way as any other plugin then you can get it from the context on handlers and extensions as &lt;code&gt;this.mongo&lt;/code&gt; or get it from &lt;code&gt;server.plugins[&#39;hapi-mongodb2].client&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For more info on what you can do with the mongodb native driver &lt;a href=&quot;https://mongodb.github.io/node-mongodb-native/2.0/overview/quickstart/&quot;&gt;check the docs&lt;/a&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Don't trust on file uploads with postman</title>
          <link>/2014/12/08/dont-trust-on-file-uploads-with-postman</link>
          <guid isPermaLink="true">/2014/12/08/dont-trust-on-file-uploads-with-postman</guid>
          
          <pubDate>Mon, 08 Dec 2014 18:01:57 -0500</pubDate>
          <description>&lt;p&gt;I have been using postman for quite a while to test requests into my day-job API, so I was confident it worked pretty nice and it was definitely very easy to use. I just saved the requests and it even handled cookies for me.&lt;/p&gt;

&lt;p&gt;Then I had to test files. Since it worked pretty nice on the other requests I were doing, including &lt;code&gt;form-data&lt;/code&gt;, &lt;code&gt;urlencoded&lt;/code&gt; or &lt;code&gt;multipart&lt;/code&gt; then when files upload failed the first thing that came to my mind was «&lt;em&gt;shit, I couldn&#39;t get streams to work&lt;/em&gt;» and «&lt;em&gt;hapi is broken&lt;/em&gt;» (I&#39;m using &lt;a href=&quot;http://hapijs.com/&quot;&gt;&lt;code&gt;hapi&lt;/code&gt;&lt;/a&gt;), even worst: &lt;a href=&quot;https://github.com/pkgcloud/pkgcloud&quot;&gt;&lt;code&gt;pkgcloud&lt;/code&gt;&lt;/a&gt; doesn&#39;t takes streams. As a result, I ended up debugging for hours streams on &lt;code&gt;pkgcloud&lt;/code&gt; and changed implementations, then checked upstreams on &lt;code&gt;hapi&lt;/code&gt; and saw there was on &lt;code&gt;.on(&#39;data&#39;, fn)&lt;/code&gt; being called but &lt;code&gt;.on(&#39;readable&#39;)&lt;/code&gt; and &lt;code&gt;.on(&#39;end&#39;)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;«&lt;em&gt;Empty streams!&lt;/em&gt;» I said, «&lt;em&gt;of course, &lt;code&gt;hapi&lt;/code&gt; is wrong and it&#39;s not reading the file I&#39;m sending!&lt;/em&gt;». Oh boy, I was so wrong. I even filled a bug asking if the streams implementation was broken.&lt;/p&gt;

&lt;p&gt;Then I decided to give it a try with &lt;code&gt;curl&lt;/code&gt; and &lt;strong&gt;boom&lt;/strong&gt;: worked.&lt;/p&gt;

&lt;p&gt;«&lt;em&gt;OK, &lt;code&gt;curl&lt;/code&gt; must be corrupted, will try with &lt;code&gt;wget&lt;/code&gt;&lt;/em&gt;», of course, &lt;em&gt;&lt;code&gt;curl&lt;/code&gt; must be corrupted&lt;/em&gt;; seems legit, right? So &lt;code&gt;wget&lt;/code&gt; was &lt;em&gt;corrupted&lt;/em&gt; as well it seemed, because that was working too.&lt;/p&gt;

&lt;p&gt;Lesson: do not trust on postman. When I started writing it I was thinking &lt;em&gt;don&#39;t trust postman for file uploads&lt;/em&gt; but now, after revisiting all it took to debug such a simple thing it&#39;s better a &lt;em&gt;don&#39;t trust postman at all&lt;/em&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Did you got a SSL certificate from GoDaddy, was issued by GoDaddy G2 and now you have issues of non-valid/not-trusted certificate?</title>
          <link>/2014/12/06/did-you-got-a-ssl-from-godaddy-g2-and-is-not-trusted</link>
          <guid isPermaLink="true">/2014/12/06/did-you-got-a-ssl-from-godaddy-g2-and-is-not-trusted</guid>
          
          <pubDate>Sat, 06 Dec 2014 00:00:00 -0500</pubDate>
          <description>&lt;p&gt;After we bought a certificate with GoDaddy (which BTW, wasn&#39;t my idea) it got signed by their CA GoDaddy - G2, which turns out is not trusted by &lt;code&gt;nodejs&lt;/code&gt;, nor by safari on iOS.&lt;/p&gt;

&lt;p&gt;The certificate comes with a file called &lt;code&gt;gd_bundle.crt&lt;/code&gt; which I thought it would be enough since it&#39;s the one being sent by GoDaddy to be added into the chain, so I made the &lt;code&gt;cat gd_bundle.crt &amp;gt;&amp;gt; my_cert.crt&lt;/code&gt;. What&#39;s the surprise? That&#39;s only G2 CA bundle, not G1 which is widely trusted, the path wasn&#39;t there.&lt;/p&gt;

&lt;p&gt;Obviously part of the solution, then, was going to &lt;a href=&quot;https://certs.godaddy.com/repository/&quot;&gt;GoDaddy&#39;s cert repo&lt;/a&gt; and try one by one the probable solutions. To avoid making you lose time on it: the file to download is called &lt;code&gt;gd_bundle-g2-g1.crt&lt;/code&gt; and is under the &lt;em&gt;GoDaddy Certificate Chain&lt;/em&gt; title. If you&#39;re using NGINX (like me) you need to concatenate that file to the certificate given to you by GoDaddy, that means the conent of &lt;code&gt;gd_bundle-g2-g1.crt&lt;/code&gt; must go &lt;strong&gt;after&lt;/strong&gt; the content of your certificate in order to get the chain right, so the command should look like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;cat gd_bundle-g2-g1.crt &amp;gt;&amp;gt; your-certificate.crt
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now you got a fully trusted certificate.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Irssi and Tmux having refresh issues, quick work-around</title>
          <link>/2014/10/13/irssi-and-tmux-refresh-screen</link>
          <guid isPermaLink="true">/2014/10/13/irssi-and-tmux-refresh-screen</guid>
          
          <pubDate>Mon, 13 Oct 2014 22:08:54 -0500</pubDate>
          <description>&lt;pre&gt;&lt;code&gt;TERM=screen irssi
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I had this same issue with &lt;code&gt;htop&lt;/code&gt; and &lt;code&gt;tmux&lt;/code&gt; and this was the solution. It seems it&#39;s an issue with the 256-color support or something.&lt;/p&gt;

&lt;p&gt;So there you go, if you&#39;re using the latests &lt;code&gt;irssi&lt;/code&gt; and see only half of the screen refreshes (or just the last line) then this workaround will solve it for you.&lt;/p&gt;

&lt;p&gt;I put it on my aliases list like:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;alias irssi=&#39;TERM=screen irssi&#39;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;And done.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>vim: clipboard support without x</title>
          <link>/2014/06/30/vim-clipboard-support-without-x</link>
          <guid isPermaLink="true">/2014/06/30/vim-clipboard-support-without-x</guid>
          
          <pubDate>Mon, 30 Jun 2014 11:59:32 -0500</pubDate>
          <description>&lt;p&gt;On my Linux computers I have used &lt;code&gt;xclip&lt;/code&gt; for having clipboard support for some years but never got it to run in my servers because they do not have X server and you need one for the clipboard, always got a:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;xclip: Error: Can&#39;t open display: (null)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;So I had to do a workaround and the easiest thing to do was using a temporary file:&lt;/p&gt;

&lt;p&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-vim&quot; data-lang=&quot;vim&quot;&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;echo $DISPLAY&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;=~&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;
  vmap &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt; /tmp/theClipboardWithoutX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; getreg&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  map &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; setreg&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;lt; /tmp/theClipboardWithoutX&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  vmap &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; system&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xclip -i -selection clipboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; getreg&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;
  map &lt;span class=&quot;p&quot;&gt;&amp;lt;&lt;/span&gt;C&lt;span class=&quot;p&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;call&lt;/span&gt; setreg&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;\&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;system&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;xclip -o -selection clipboard&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&amp;lt;&lt;/span&gt;CR&lt;span class=&quot;p&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;p&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;endif&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;Basically: if there&#39;s no &lt;code&gt;$DISPLAY&lt;/code&gt; set then send the copied selection to the file &lt;code&gt;/tmp/theClipboardWithoutX&lt;/code&gt; with the keybinds Ctrl+C and with Ctrl+V you get the data inside that file. If there&#39;s &lt;code&gt;$DISPLAY&lt;/code&gt; then use &lt;code&gt;xclip&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Surprisely it works very well.&lt;/p&gt;

&lt;p&gt;Check &lt;a href=&quot;https://github.com/ghostbar/dotvim/blob/master/vim/rc/copy-n-paste.vim&quot;&gt;my full &lt;code&gt;vimrc&lt;/code&gt; for copy and paste stuff (has configs for Mac as well)&lt;/a&gt; and if you want, the full &lt;a href=&quot;https://github.com/ghostbar/dotvim&quot;&gt;vimfiles repo&lt;/a&gt; may come handy as well.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>angular-zxcvbn v1.0.0</title>
          <link>/2014/06/16/angular-zxcvbn-v1.0.0</link>
          <guid isPermaLink="true">/2014/06/16/angular-zxcvbn-v1.0.0</guid>
          
          <pubDate>Mon, 16 Jun 2014 00:00:00 -0500</pubDate>
          <description>&lt;p&gt;I wrote a very simple &lt;code&gt;angular.js&lt;/code&gt; directive for the &lt;a href=&quot;https://github.com/dropbox/zxcvbn&quot;&gt;&lt;code&gt;zxcvbn&lt;/code&gt; library&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can give it a try with a live demo on &lt;a href=&quot;http://plnkr.co/9wTZgR&quot;&gt;&lt;code&gt;plnkr&lt;/code&gt;&lt;/a&gt; and grab the code either from &lt;a href=&quot;https://github.com/ghostbar/angular-zxcvbn&quot;&gt;github&lt;/a&gt; or install it with:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;bower install angular-zxcvbn
&lt;/code&gt;&lt;/pre&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Why my gpg does not support hkps?</title>
          <link>/2014/05/30/why-my-gpg-does-not-support-hkps</link>
          <guid isPermaLink="true">/2014/05/30/why-my-gpg-does-not-support-hkps</guid>
          
          <pubDate>Fri, 30 May 2014 20:23:08 -0500</pubDate>
          <description>&lt;p&gt;I was changing my &lt;code&gt;~/.gnupg/gpg.conf&lt;/code&gt; values today and with those was using &lt;code&gt;hkps&lt;/code&gt; instead of the regular &lt;code&gt;hkp&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;And found out my debian system said &lt;code&gt;gpg&lt;/code&gt; did not support that protocol &lt;code&gt;hkps&lt;/code&gt;. &lt;strong&gt;What?!&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Doing a little search I found out the package &lt;code&gt;gnupg&lt;/code&gt; does not ship with &lt;code&gt;hkps&lt;/code&gt; support because is not built with &lt;code&gt;libcurl&lt;/code&gt;, if you want to have &lt;code&gt;hkps&lt;/code&gt; support just install &lt;code&gt;gnupg-curl&lt;/code&gt; and done, now my servers are going on &lt;code&gt;hkps&lt;/code&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>parserss v0.0.1</title>
          <link>/2014/05/23/parserss-v0.0.1</link>
          <guid isPermaLink="true">/2014/05/23/parserss-v0.0.1</guid>
          
          <pubDate>Fri, 23 May 2014 18:44:30 -0500</pubDate>
          <description>&lt;p&gt;I wrote &lt;code&gt;parserss&lt;/code&gt; a few days ago, it&#39;s basically a wrapper for &lt;code&gt;feedparser&lt;/code&gt; and it&#39;s convenient to have an easy to use JSON with all the data you require.&lt;/p&gt;

&lt;p&gt;For more info just read the &lt;code&gt;README&lt;/code&gt; at the &lt;a href=&quot;https://github.com/ghostbar/parserss&quot;&gt;repository&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It&#39;s available from &lt;code&gt;npm&lt;/code&gt; as well, just:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install --save parserss
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;As soon as it have some tests it will be &lt;code&gt;v1.0.0&lt;/code&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Framework Challenge Bogodev 2014</title>
          <link>/2014/05/18/framework-challenge-bogodev</link>
          <guid isPermaLink="true">/2014/05/18/framework-challenge-bogodev</guid>
          
          <pubDate>Sun, 18 May 2014 07:05:03 -0500</pubDate>
          <description>&lt;p&gt;Ayer participé en el framework challenge de Bogodev. Fue en la sede de Wayra Colombia que es genial.&lt;/p&gt;

&lt;p&gt;El reto era hacer una visualización de objetos espaciales alrededor de otro (la &quot;estrella de la muerte&quot;) y actualizar sus posiciones a partir de coordenadas X, Y y Z.&lt;/p&gt;

&lt;p&gt;La solución que le dió mi equipo consistió en Angularjs y D3js para el frontend y un expressjs muy simple para el backend.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://i.cloudup.com/7PpfqYofVN.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Para este tipo de visualización three.js da un mejor aspecto, genera 3D de verdad y no hay que forzar un fake 3d como nos tocó hacer con D3js, y eso fue lo que hicieron otros equipos. Pero: aprendimos D3js, SVG y cómo funciona D3js cuando da el órden de renderizado lo cuál fue muy instructivo (pista: cuando le pasas un array toma la posición como identificador para hacer el renderizado, tanto posición como transisiones).&lt;/p&gt;

&lt;p&gt;Aquí está el código y cómo correrlo por si quieren probarlo: &lt;a href=&quot;https://github.com/ghostbar/fchallenge-ngjs&quot;&gt;https://github.com/ghostbar/fchallenge-ngjs&lt;/a&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Using angular-file-uploader and angular-file-model together</title>
          <link>/2014/05/16/using-angular-file-uploader-together-with-angular-file-model</link>
          <guid isPermaLink="true">/2014/05/16/using-angular-file-uploader-together-with-angular-file-model</guid>
          
          <pubDate>Fri, 16 May 2014 21:59:39 -0500</pubDate>
          <description>&lt;p&gt;Two of the first angular module&#39;s I wrote were built to work together very well, they are &lt;a href=&quot;https://github.com/ghostbar/angular-file-uploader&quot;&gt;&lt;code&gt;angular-file-uploader&lt;/code&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/ghostbar/angular-file-uploader&quot;&gt;&lt;code&gt;angular-file-model&lt;/code&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;angular-file-model&lt;/code&gt; works as you actually expect &lt;code&gt;ng-model&lt;/code&gt; to work by default with files, that means: takes the data from an &lt;code&gt;&amp;lt;input type=&#39;file&#39;&amp;gt;&lt;/code&gt; and makes it available on the object passed to &lt;code&gt;ng-model&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;angular-file-uploader&lt;/code&gt; does the thing the regular &lt;code&gt;$http.post&lt;/code&gt; does not: letting you know about the current state of the upload in percentages.&lt;/p&gt;

&lt;p&gt;Installing it is:&lt;/p&gt;

&lt;p&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-bash&quot; data-lang=&quot;bash&quot;&gt;&lt;span class=&quot;gp&quot;&gt;~$ &lt;/span&gt;bower install angular-file-uploader angular-file-model&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;So let&#39;s take a basic &lt;code&gt;uploader.html&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-html&quot; data-lang=&quot;html&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;file&#39;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;data-file-model=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;form.theFile&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;button&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;ng-click=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&#39;upload()&#39;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Upload&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;And now &lt;code&gt;file.js&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;myApp&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;angular-file-uploader&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&#39;angular-file-model&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/p&gt;

&lt;p&gt;&lt;span class=&quot;nx&quot;&gt;angular&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;myApp&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;controller&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;UploadCtrl&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;$scope&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;s1&quot;&gt;&#39;angularFileUploader&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ngUploader&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;$scope&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;form&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{};&lt;/span&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;span class=&quot;kd&quot;&amp;gt;var&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;nx&quot;&amp;gt;config&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;o&quot;&amp;gt;=&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;{&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;na&quot;&amp;gt;newNames&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;{&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;nx&quot;&amp;gt;$scope&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;form&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;file&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;[&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;mi&quot;&amp;gt;0&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;].&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;na&quot;&amp;gt;name&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;:&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;s1&quot;&amp;gt;&#39;newNameWithoutExtension&#39;&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;p&quot;&amp;gt;}&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;p&quot;&amp;gt;};&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;nx&quot;&amp;gt;$scope&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;upload&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;o&quot;&amp;gt;=&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;kd&quot;&amp;gt;function&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;()&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;{&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;nx&quot;&amp;gt;ngUploader&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;send&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;s1&quot;&amp;gt;&#39;https://domain.tld/upload/path&#39;&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;,&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;nx&quot;&amp;gt;$scope&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;form&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;file&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;,&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;nx&quot;&amp;gt;config&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;p&quot;&amp;gt;).&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;then&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;nx&quot;&amp;gt;success&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;,&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;nx&quot;&amp;gt;error&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;,&amp;lt;/span&amp;gt;
    &amp;lt;span class=&quot;nx&quot;&amp;gt;progress&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;p&quot;&amp;gt;);&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;p&quot;&amp;gt;};&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;kd&quot;&amp;gt;function&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;nx&quot;&amp;gt;success&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;msg&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;)&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;{&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;nx&quot;&amp;gt;console&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;log&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;msg&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;);&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;p&quot;&amp;gt;};&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;kd&quot;&amp;gt;function&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;nx&quot;&amp;gt;error&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;errorMsg&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;)&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;{&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;nx&quot;&amp;gt;console&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;log&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;errorMsg&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;);&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;p&quot;&amp;gt;};&amp;lt;/span&amp;gt;

&amp;lt;span class=&quot;kd&quot;&amp;gt;function&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;nx&quot;&amp;gt;progress&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;status&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;)&amp;lt;/span&amp;gt; &amp;lt;span class=&quot;p&quot;&amp;gt;{&amp;lt;/span&amp;gt;
  &amp;lt;span class=&quot;nx&quot;&amp;gt;console&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;.&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;log&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;(&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;nx&quot;&amp;gt;status&amp;lt;/span&amp;gt;&amp;lt;span class=&quot;p&quot;&amp;gt;);&amp;lt;/span&amp;gt;
&amp;lt;span class=&quot;p&quot;&amp;gt;};&amp;lt;/span&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>transloadit-api v1.0.0-rc1</title>
          <link>/2014/05/14/transloadit-api-v1.0.0-rc1</link>
          <guid isPermaLink="true">/2014/05/14/transloadit-api-v1.0.0-rc1</guid>
          
          <pubDate>Wed, 14 May 2014 00:10:02 -0500</pubDate>
          <description>&lt;p&gt;A release candidate for &lt;code&gt;v1.0.0&lt;/code&gt; of &lt;code&gt;transloadit-api&lt;/code&gt; is out.&lt;/p&gt;

&lt;p&gt;You can install it via &lt;code&gt;npm&lt;/code&gt; and give it a try.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install transloadit-api@1.0.0-rc1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now it supports the full &lt;a href=&quot;https://transloadit.com/docs/api-docs&quot;&gt;transloadit API&lt;/a&gt;, together with signature&#39;s creation, assemblies, notifications and templates management.&lt;/p&gt;

&lt;p&gt;The &lt;a href=&quot;https://github.com/ghostbar/transloadit-api&quot;&gt;source is on github&lt;/a&gt;, the &lt;a href=&quot;https://ghostbar.github.io/transloadit-api&quot;&gt;docs are in this website&lt;/a&gt; as well as in the comments in the code (which is the source for the website) and of course, &lt;a href=&quot;https://github.com/ghostbar/transloadit-api/issues&quot;&gt;any issue just report it on the github&#39;s tracker&lt;/a&gt;. It has a lot of tests but there are some tests missing, specially for operations that require internet.&lt;/p&gt;

&lt;p&gt;Hopefully I will have time to write them this week and then release a proper &lt;code&gt;v1.0.0&lt;/code&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>transloadit-api v1.0.0-rc1</title>
          <link>/2014/05/14/transloadit-api-v1.0.0-rc1-es</link>
          <guid isPermaLink="true">/2014/05/14/transloadit-api-v1.0.0-rc1-es</guid>
          
          <pubDate>Wed, 14 May 2014 00:09:46 -0500</pubDate>
          <description>&lt;p&gt;El release candidate de &lt;code&gt;v1.0.0&lt;/code&gt; para &lt;code&gt;transloadit-api&lt;/code&gt; ya está disponible.&lt;/p&gt;

&lt;p&gt;Puedes instalarlo vía &lt;code&gt;npm&lt;/code&gt; y probarlo:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;npm install transloadit-api@1.0.0-rc1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ahora soporta la &lt;a href=&quot;https://transloadit.com/docs/api-docs&quot;&gt;API completa de transloadit&lt;/a&gt;: firmas, assemblies, notifications y manejo de plantillas.&lt;/p&gt;

&lt;p&gt;El &lt;a href=&quot;https://github.com/ghostbar/transloadit-api&quot;&gt;código está en github&lt;/a&gt;, la &lt;a href=&quot;https://ghostbar.github.io/transloadit-api&quot;&gt;documentación en este website&lt;/a&gt; así como en los comentarios del código (que son la fuente para el website) y por supuesto: &lt;a href=&quot;https://github.com/ghostbar/transloadit-api/issues&quot;&gt;cualquier problema repórtalo en el tracker de github&lt;/a&gt;. Tiene un montón de pruebas pero aún le faltan algunas, especialmente para operaciones que requieren internet.&lt;/p&gt;

&lt;p&gt;Quizás tenga tiempo para escribirlas esta semana y entonces lanzar una &lt;code&gt;v1.0.0&lt;/code&gt; como es.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>angular-geocomplete's first version</title>
          <link>/2014/05/13/angular-geocomplete</link>
          <guid isPermaLink="true">/2014/05/13/angular-geocomplete</guid>
          
          <pubDate>Tue, 13 May 2014 07:08:41 -0500</pubDate>
          <description>&lt;p&gt;So I was needing a resulting JSON array with possible solutions for a given address or city name and then &lt;a href=&quot;https://github.com/ghostbar/angular-geocomplete/&quot;&gt;angular-geocomplete&lt;/a&gt; was made.&lt;/p&gt;

&lt;p&gt;The great thing is that you can use it together with &lt;code&gt;typeahead&lt;/code&gt; and now you have address/location autocomplete, just like the one on Google Maps.&lt;/p&gt;

&lt;p&gt;And yes, it does uses Google Maps&#39;s API.&lt;/p&gt;

&lt;p&gt;What&#39;s the advantage of this thing? You get coordinates together with all the names.&lt;/p&gt;

&lt;p&gt;Installable via &lt;code&gt;bower&lt;/code&gt; as well with &lt;code&gt;bower install angular-geocomplete&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Any issue: to &lt;a href=&quot;https://github.com/ghostbar/angular-geocomplete/issues&quot;&gt;the GitHub tracker&lt;/a&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
      
        <item>
          
          <title>Primera versión de angular-geocomplete</title>
          <link>/2014/05/13/angular-geocomplete-es</link>
          <guid isPermaLink="true">/2014/05/13/angular-geocomplete-es</guid>
          
          <pubDate>Tue, 13 May 2014 07:02:37 -0500</pubDate>
          <description>&lt;p&gt;Esta es la historia de un día que necesitaba con una dirección o el nombre de una ciudad conseguir un array JSON que me diese los posibles lugares donde eso fuese cierto.&lt;/p&gt;

&lt;p&gt;Y entonces nació &lt;a href=&quot;https://github.com/ghostbar/angular-geocomplete&quot;&gt;angular-geocomplete&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Lo fino es que se puede combinar con algún &lt;code&gt;typeahead&lt;/code&gt; y se obtiene un autocompletado demasiado genial como el de Google Maps.&lt;/p&gt;

&lt;p&gt;Y sí, usa el API de Google Maps.&lt;/p&gt;

&lt;p&gt;¿Cuál es la gran ventaja? Que obtienes no sólo el nombre del lugar sino sus coordenadas.&lt;/p&gt;

&lt;p&gt;Instalable vía &lt;code&gt;bower&lt;/code&gt; también con &lt;code&gt;bower install angular-geocomplete&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Problemas a los &lt;a href=&quot;https://github.com/ghostbar/angular-geocomplete/issues&quot;&gt;issues de GitHub&lt;/a&gt;.&lt;/p&gt;

          </description>
        </item>
      
    
  </channel>
</rss>
